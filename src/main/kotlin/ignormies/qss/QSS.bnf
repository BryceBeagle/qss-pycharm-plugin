{
    parserClass="ignormies.qss.parser.QSSParser"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="QSS"
    psiImplClassSuffix="Impl"
    psiPackage="ignormies.qss.psi"
    psiImplPackage="ignormies.qss.psi.impl"

    elementTypeHolderClass="ignormies.qss.psi.QSSTypes"
    elementTypeClass="ignormies.qss.psi.QSSElementType"
    tokenTypeClass="ignormies.qss.psi.QSSTokenType"

    psiImplUtilClass="ignormies.qss.psi.impl.QSSPsiImplUtil"

    tokens = [
       SEMICOLON=";"
       OPEN_BRACE="{"
       CLOSE_BRACE="}"
    ]
}

file ::= style_rule*

style_rule ::= selector_list declaration_block

// #############################################################################
// Selectors
// #############################################################################

selector_list ::= selector selector*
private selector ::= universal_selector | property_selector | combinator_selector | simple_selector

// Universal selector
universal_selector ::= ASTERISK

// Simple selector
simple_selector ::= IDENTIFIER

// Property selector
property_selector ::= simple_selector OPEN_BRACKET attribute CLOSE_BRACKET
attribute ::= IDENTIFIER EQ_SIGN (IDENTIFIER | STRING)

// Combinator selector
private combinator_selector ::= child_selector | adjacent_selector
child_selector ::= GT_SIGN selector
adjacent_selector ::= PLUS_SIGN selector

// #############################################################################
// Declarations
// #############################################################################

declaration_block ::= OPEN_BRACE declaration_list CLOSE_BRACE
private declaration_list ::= declaration? (SEMICOLON declaration?)*
declaration ::= property COLON expression

// #############################################################################
// Properties
// #############################################################################

property ::= IDENTIFIER
expression ::= term (operator? term)*
term ::= NUMBER | PERCENTAGE | IDENTIFIER | ANGLE


// IN PROGRESS:

//selector ::= selector_ selector*
//selector_ ::= universal_selector | type_selector | property_selector | class_selector
//              | id_selector | descendent_selector | child_selector
//
//universal_selector ::= "*"
//type_selector ::= CLASS_TYPE
//property_selector ::= type_selector property*  // TODO
//class_selector ::= "." selector_
//id_selector ::= type_selector? "#" selector_
//descendent_selector ::= type_selector selector_
//child_selector ::= type_selector ">" selector_
